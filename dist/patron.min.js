!function(e){"use strict";class t{constructor(e){this.guestReceiver=e}value(e){return this.guestReceiver(e),e}}function s(e,t,s){"function"==typeof t?t(e,s):t.give(e,s)}class i{constructor(e){this.receiver=e}give(e,t){return this.receiver(e,t),this}}class r{constructor(e,t){this.sourceGuest=e,this.targetGuest=t}introduction(){return"function"==typeof this.sourceGuest?"guest":this.sourceGuest.introduction?this.sourceGuest.introduction():"guest"}give(e,t){return s(e,this.targetGuest,t),this}disposed(e){const t=this.sourceGuest;return!!t.disposed&&t.disposed(e)}}var o=Object.defineProperty,n=(e,t,s)=>((e,t,s)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const u=new Map;class a{constructor(e){this.initiator=e,n(this,"patrons"),n(this,"give"),this.patrons=new Set,u.set(this,this.patrons);let t=null;const s=(e,t)=>{this.patrons.forEach((s=>{this.sendValueToGuest(e,s,t)}))};this.give=(e,i)=>{const r=()=>{r===t&&s(e,i)};return t=r,queueMicrotask(r),this}}size(){return this.patrons.size}add(e){if(!e)throw new Error("PatronPool add method received nothing!");return"function"!=typeof e&&e.introduction&&"patron"===e.introduction()&&this.patrons.add(e),this}remove(e){return this.patrons.delete(e),this}distribute(e,t){return this.add(t),this.sendValueToGuest(e,t,{}),this}sendValueToGuest(e,t,i){this.guestDisposed(e,t)||s(e,t,{...i,data:{...i?.data??{},initiator:this.initiator,pool:this}})}guestDisposed(e,t){return!!t.disposed?.(e)&&(this.remove(t),!0)}}var h=Object.defineProperty,c=(e,t,s)=>((e,t,s)=>t in e?h(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,t+"",s);class l{constructor(e){this.sourceDocument=e,c(this,"thePool",new a(this))}pool(){return this.thePool}give(e){return this.sourceDocument=e,this.thePool.give(this.sourceDocument),this}value(e){return"function"==typeof e?this.thePool.distribute(this.sourceDocument,new i(e)):this.thePool.distribute(this.sourceDocument,e),this}}class d{constructor(e){this.baseGuest=e}give(e,t){let s=this.baseGuest;return"function"==typeof s&&(s=new i(s)),s.give(e,t),this}introduction(){return"function"!=typeof this.baseGuest&&this.baseGuest.introduction?this.baseGuest.introduction():"guest"}disposed(e){const t=this.baseGuest;return!!t.disposed&&t.disposed(e)}}var v=Object.defineProperty,p=(e,t,s)=>((e,t,s)=>t in e?v(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class g{constructor(e){p(this,"guests",new Set),p(this,"patronPool"),this.patronPool=new a(e)}give(e,t){return this.deliverToGuests(e,t),this.patronPool.give(e,t),this}add(e){return"function"!=typeof e&&e.introduction&&"guest"!==e.introduction()||this.guests.add(e),this.patronPool.add(e),this}remove(e){return this.guests.delete(e),this.patronPool.remove(e),this}distribute(e,t){return this.add(t),this.give(e),this}size(){return this.patronPool.size()+this.guests.size}deliverToGuests(e,t){this.guests.forEach((i=>{s(e,i,t)})),this.guests.clear()}}var b=Object.defineProperty,f=(e,t,s)=>((e,t,s)=>t in e?b(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class w{constructor(){f(this,"theChain"),f(this,"keysKnown",new Set),f(this,"keysFilled",new Set),f(this,"filledChainPool",new g(this)),this.theChain=new l({})}resultArray(e){const t=new d(e);return this.filledChainPool.add(new r(t,(e=>{t.give(Object.values(e))}))),this.isChainFilled()&&this.theChain.value(new i((e=>{this.filledChainPool.give(Object.values(e))}))),this}result(e){const t=new d(e);return this.isChainFilled()?(this.filledChainPool.add(t),this.theChain.value(new i((e=>{this.filledChainPool.give(e)})))):this.filledChainPool.add(t),this}receiveKey(e){return this.keysKnown.add(e),new i((t=>{queueMicrotask((()=>{this.theChain.value(new i((s=>{this.keysFilled.add(e);const i={...s,[e]:t};this.theChain.give(i),this.isChainFilled()&&this.filledChainPool.give(i)})))}))}))}isChainFilled(){return this.keysFilled.size>0&&this.keysFilled.size===this.keysKnown.size}}var y=Object.defineProperty,P=(e,t,s)=>((e,t,s)=>t in e?y(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,t+"",s);class G{constructor(){P(this,"baseSource",new l(null))}value(e){return this.baseSource.value(new r(e,(t=>{null!==t&&s(t,e)}))),this}give(e){return this.baseSource.give(e),this}pool(){return this.baseSource.pool()}}var m=Object.defineProperty,C=(e,t,s)=>((e,t,s)=>t in e?m(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,t+"",s);e.Factory=class{constructor(e,t={}){this.constructorFn=e,this.factories=t}create(...e){return new this.constructorFn(...e,this.factories)}},e.Guest=i,e.GuestAware=t,e.GuestAwareMap=class{constructor(e,t){this.baseSource=e,this.targetSourceFactory=t}value(e){const i=new w;return this.baseSource.value(new r(e,(e=>{e.forEach(((e,r)=>{this.targetSourceFactory.create(new t((t=>{s(e,t)}))).value(i.receiveKey(""+r))}))}))),i.resultArray(e),this}},e.GuestAwareSequence=class{constructor(e,t){this.baseSource=e,this.targetSourceFactory=t}value(e){const t=new w,i=new G,o=this.targetSourceFactory.create(i);return this.baseSource.value(new r(e,(r=>{let n=0;const u=()=>{void 0!==r[n+1]?(n+=1,a()):t.resultArray(e)};function a(){i.give(r[n]),o.value(t.receiveKey(""+n)),o.value(u)}void 0!==r[n]?a():s([],e)}))),this}},e.GuestCast=r,e.GuestChain=w,e.GuestDisposable=class{constructor(e,t){this.guest=e,this.disposeCheck=t}disposed(e){return this.disposeCheck(e)}give(e,t){return s(e,this.guest,t),this}},e.GuestObject=d,e.GuestPool=g,e.GuestSync=class{constructor(e){this.theValue=e}give(e){return this.theValue=e,this}value(){return this.theValue}},e.Module=class{constructor(e){this.buildingFn=e}create(...e){return this.buildingFn(...e)}},e.Patron=class{constructor(e){this.willBePatron=e}introduction(){return"patron"}give(e,t){return s(e,this.willBePatron,t),this}disposed(e){const t=this.willBePatron;return t?.disposed?.(e)||!1}},e.PatronOnce=class{constructor(e){this.baseGuest=e,C(this,"received",!1)}introduction(){return"patron"}give(e,t){this.received||s(e,this.baseGuest,t);const i=t?.data;return i?.pool&&i.pool.remove(this),this}disposed(e){const t=this.baseGuest;return!!t.disposed&&t.disposed(e)}},e.PatronPool=a,e.Source=l,e.SourceEmpty=G,e.give=s,e.isPatronInPools=e=>{let t=!1;return u.forEach((s=>{t||(t=s.has(e))})),t},e.removePatronFromPools=e=>{u.forEach((t=>{t.delete(e)}))}}({});
